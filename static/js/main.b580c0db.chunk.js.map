{"version":3,"sources":["components/filter-box/filter-box.styled.js","components/filter-box/filter-box.jsx","components/character-box/character-box.styled.js","components/character-box/character-box.jsx","components/character-list/character-list.styled.js","components/character-list/character-list.jsx","components/sort-dropdown/sort-dropdown.styled.js","components/sort-dropdown/sort-dropdown.jsx","components/selected-filter-pill/selected-filter-pill.styled.js","components/selected-filter-pill/selected-filter-pill.jsx","pages/home-page/home-page.styled.js","pages/home-page/home-page.jsx","App.jsx","index.js"],"names":["FilterWrapperStyled","styled","section","displayName","CheckboxWrapperStyled","div","FilterBox","props","filterName","filters","map","filter","index","key","checkboxName","id","type","className","onChange","event","handleChange","name","htmlFor","defaultProps","CharacterBoxWrapper","ImageColStyled","ImageDetailsWrapperStyled","DetailsTitleStyled","DetailsValueStyled","DetailsRowStyled","DetailsWrapper","CharacterBox","imageSrc","created","details","src","alt","detail","value","title","CharacterListStyled","RowStyled","CharacterList","characterList","length","character","SelectStyled","select","SortDropdown","onSortOptionChange","defaultValue","disabled","options","item","label","PillStyled","PillWrapperStyled","FilterPills","pills","pill","onClick","removeFilter","tabIndex","SectionHeaderStyled","header","ColStyled","HomePage","getFullYear","date","Date","String","getCharacterList","list","image","currentYear","species","gender","origin","status","location","sortById","compareFunction","target","val1","val2","setState","filteredData","state","sort","filterData","checked","prevState","val","applyFilters","concat","includes","filterPills","i","buildFilterSection","isChecked","noDataFoundMessage","role","buildErrorMessage","buildLoadingSpinner","isError","isDataLoading","fetch","then","response","json","result","results","catch","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b580c0db.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FilterWrapperStyled = styled.section`\n  border: 1px solid black;\n  margin: 20px 5px;\n  text-align: left;\n  padding: 0 10px 5px;\n  header {\n    text-transform: capitalize;\n  }\n`;\nFilterWrapperStyled.displayName = 'FilterWrapperStyled';\n\nexport const CheckboxWrapperStyled = styled.div`\n  margin-bottom: 5px;\n\n  input {\n    margin-right: 5px;\n  }\n\n  label {\n    font-weight: normal;\n  }\n`;\nCheckboxWrapperStyled.displayName = 'CheckboxWrapperStyled';","import React from 'react';\n\nimport {\n  FilterWrapperStyled,\n  CheckboxWrapperStyled,\n} from './filter-box.styled';\n\nconst FilterBox = (props) => {\n  return (\n    <FilterWrapperStyled>\n      <header><h4>{props.filterName}</h4></header>\n      {props.filters.map((filter, index) =>\n        <CheckboxWrapperStyled key={filter.checkboxName + index}>\n          <input\n            id={props.filterName + filter.checkboxName}\n            type=\"checkbox\"\n            className=\"\"\n            onChange={(event) => props.handleChange(event, props.filterName, filter.checkboxName)}\n            name={filter.checkboxName}\n          />\n          <label htmlFor={props.filterName + filter.checkboxName}>{filter.checkboxName}</label>\n        </CheckboxWrapperStyled>\n      )}\n    </FilterWrapperStyled>\n  )\n};\n\nFilterBox.defaultProps = {\n  // filters: [{ isChecked: false, handleChange: () => { }, id: 1, checkboxName: 'filter' }]\n  filters: []\n};\n\nexport default FilterBox;","import styled from 'styled-components';\n\nexport const CharacterBoxWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 5px;\n  margin: 5px;\n  background-color: rgb(55, 56, 56);\n  color: white;\n\n`;\nCharacterBoxWrapper.displayName = 'CharacterBoxWrapper';\n\nexport const ImageColStyled = styled.div`\n  padding: 0;\n  img {\n    width: 100%;\n  }\n`;\nImageColStyled.displayName = 'ImageColStyled';\n\nexport const ImageDetailsWrapperStyled = styled.div`\n  padding: 10px;\n  text-align: left;\n  position: absolute;\n  bottom: 0;\n  min-height: 60px;\n  background-color: rgba(51, 61, 55, 0.7);\n  width: 100%;\n  vertical-align: middle;\n  > div:first-child {\n    font-size: 20px;\n  }\n\n  @media only screen and (max-width: 420px) {\n    min-height: 30px;\n    > div:first-child {\n      font-size: 12px;\n    }\n    > div:nth-child(2) {\n      display: none;\n    }\n  }\n`;\nImageDetailsWrapperStyled.displayName = 'ImageDetailsWrapperStyled';\n\nexport const DetailsTitleStyled = styled.div`\n  text-transform: uppercase;\n  font-size: 12px;\n  padding: 0;\n`;\nDetailsTitleStyled.displayName = 'DetailsTitleStyled';\n\nexport const DetailsValueStyled = styled.div`\n  color: orange;\n  text-align: right;\n  padding: 0;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-left: 15px;\n`;\nDetailsValueStyled.displayName = 'DetailsValueStyled';\n\nexport const DetailsRowStyled = styled.div`\n  border-bottom: 1px solid white;\n  margin: 10px;\n  padding: 10px 0;\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 0;\n`;\nDetailsWrapper.displayName = 'DetailsWrapper';","import React from 'react';\n\nimport {\n  CharacterBoxWrapper,\n  ImageColStyled,\n  ImageDetailsWrapperStyled,\n  DetailsTitleStyled,\n  DetailsValueStyled,\n  DetailsRowStyled,\n  DetailsWrapper,\n} from './character-box.styled';\n\nconst CharacterBox = (props) => {\n  const { imageSrc, id, created, details, name } = props;\n  return (\n    <CharacterBoxWrapper className=\"row\">\n      <ImageColStyled className=\"col-xs-12\">\n        <img src={imageSrc} alt=\"\" />\n        <ImageDetailsWrapperStyled>\n          <div>{name}</div>\n          <div>Id: {id} - Created {created} years ago</div>\n        </ImageDetailsWrapperStyled>\n      </ImageColStyled>\n      <DetailsWrapper className=\"col-xs-12\">\n        {details.map((detail, index) =>\n          <DetailsRowStyled key={detail.value + index} className=\"row\">\n            <DetailsTitleStyled className=\"col-xs-6 col-sm-3\">\n              {detail.title}\n            </DetailsTitleStyled>\n            <DetailsValueStyled className=\"col-xs-6 col-sm-9\">\n              {detail.value}\n            </DetailsValueStyled>\n          </DetailsRowStyled>\n        )}\n      </DetailsWrapper>\n    </CharacterBoxWrapper>\n  )\n};\n\nCharacterBox.defaultProps = {\n};\n\nexport default CharacterBox;","import styled from 'styled-components';\n\nexport const CharacterListStyled = styled.div`\n  padding: 0;\n`;\nCharacterListStyled.displayName = 'DetailsWrapper';\n\nexport const RowStyled = styled.div`\n  margin: 0;\n  background-color: black;\n`;\nRowStyled.displayName = 'RowStyled';\n","import React from 'react';\n\nimport CharacterBox from '../character-box/character-box';\n\nimport {\n  CharacterListStyled,\n  RowStyled,\n} from './character-list.styled';\n\nconst CharacterList = (props) => {\n  return (\n    props.characterList.length > 0 && <RowStyled className=\"row\">\n      {props.characterList.map((character, index) =>\n        <CharacterListStyled key={character.id} className=\"col-xs-6 col-sm-4 col-md-3\">\n          <CharacterBox {...character} />\n        </CharacterListStyled>\n      )}\n    </RowStyled>\n  )\n};\n\nexport default CharacterList;","import styled from 'styled-components';\n\nexport const SelectStyled = styled.select`\n  width: 100%;\n  margin: 20px 0;\n  height: 30px;\n`;\nSelectStyled.displayName = 'SelectStyled';\n","import React from 'react';\n\nimport {\n  SelectStyled,\n} from './sort-dropdown.styled';\n\nconst SortDropdown = (props) => {\n  return (\n    <SelectStyled onChange={props.onSortOptionChange} defaultValue=\"SortByID\">\n      <option disabled key=\"default-0\" value=\"SortByID\">Sort by ID</option>\n      {\n        props.options.map((item, index) =>\n          <option value={item.value} key={item.value + index}>{item.label}</option>\n        )\n      }\n    </SelectStyled>\n  )\n};\n\nSortDropdown.defaultProps = {\n  options: []\n};\n\nexport default SortDropdown;","import styled from 'styled-components';\n\nexport const PillStyled = styled.div`\n  .btn {\n    background-color: dimgray;\n    border-color: dimgray;\n  }\n  margin: 10px 5px;\n\n  span:first-child {\n    padding-right: 10px;\n  }\n\n  display: inline-block;\n`;\nPillStyled.displayName = 'PillStyled';\n\nexport const PillWrapperStyled = styled.section`\n  margin: 10px 10px;\n`;\nPillWrapperStyled.displayName = 'PillWrapperStyled';\n","import React from 'react';\n\nimport {\n  PillWrapperStyled,\n  PillStyled,\n} from './selected-filter-pill.styled';\n\nconst FilterPills = (props) => {\n  return (<PillWrapperStyled>\n    {props.pills.map((pill, index) =>\n      <PillStyled key={pill + index}>\n        <div className=\"btn btn-info btn-sm\">\n          <span>{pill}</span>\n          <span\n            className=\"glyphicon glyphicon-remove\"\n            onClick={() => props.removeFilter(pill, index)}\n            tabIndex=\"0\"\n          >\n          </span>\n        </div>\n      </PillStyled>\n    )}\n  </PillWrapperStyled>\n  )\n}\n\nexport default FilterPills;","import styled from 'styled-components';\n\nexport const SectionHeaderStyled = styled.header`\n  font-size: 24px;\n  font-weight: 600;\n  margin: 10px 10px 0;\n  color: black;\n\n  .add-filter-icon {\n    font-size: 16px;\n    float: right;\n    top: 5px;\n    border: 1px solid black;\n    border-radius: 50%;\n    color: white;\n    background-color: black;\n    padding: 5px;\n    padding-left: 6px;\n  }\n`;\nSectionHeaderStyled.displayName = 'SectionHeaderStyled';\n\nexport const ColStyled = styled.div`\n  padding: 0;\n`;\nColStyled.displayName = 'ColStyled';\n\nexport const RowStyled = styled.div`\n  margin: 0;\n`;\nRowStyled.displayName = 'RowStyled';\n","\nimport React, { Component } from 'react';\n\nimport FilterBox from '../../components/filter-box/filter-box';\nimport CharacterList from '../../components/character-list/character-list';\nimport SortDropdown from '../../components/sort-dropdown/sort-dropdown';\nimport FilterPills from '../../components/selected-filter-pill/selected-filter-pill';\n\nimport {\n  SectionHeaderStyled,\n  ColStyled,\n  RowStyled,\n} from './home-page.styled';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characterList: [],\n      filteredData: [],\n      species: [],\n      gender: [],\n      origin: [],\n      filterPills: [],\n      isError: false,\n      isDataLoading: true,\n    };\n    this.currentYear = (new Date()).getFullYear();\n  }\n\n  componentDidMount() {\n    fetch('https://rickandmortyapi.com/api/character/')\n      .then(response => {\n        response.json()\n          .then(result => {\n            const list = this.getCharacterList(result.results);\n            this.setState({\n              characterList: list,\n              filteredData: list,\n              isDataLoading: false,\n            });\n          })\n\n      })\n      .catch(() => {\n        this.setState({\n          isError: true,\n          isDataLoading: false,\n        })\n      })\n  }\n\n  getFullYear = (date) => (new Date(String(date))).getFullYear();\n\n  getCharacterList = list => list.map(character => ({\n    imageSrc: character.image,\n    id: character.id,\n    created: this.currentYear - this.getFullYear(character.created),\n    name: character.name,\n    species: character.species,\n    gender: character.gender,\n    origin: character.origin.name,\n    details:\n      [\n        { title: 'Status', value: character.status },\n        { title: 'Species', value: character.species },\n        { title: 'Gender', value: character.gender },\n        { title: 'Origin', value: character.origin.name },\n        { title: 'Last location', value: character.location.name },\n      ]\n  }));\n\n  sortById = ({ target: { value } }) => {\n    // sort data on basis of Id\n    const compareFunction = value === 'Ascending' ?\n      (val1, val2) => (val1.id - val2.id) : (val1, val2) => (val2.id - val1.id);\n    this.setState({\n      filteredData: this.state.filteredData.sort(compareFunction)\n    });\n  }\n\n  filterData = (event, type, value) => {\n    if (event.target.checked) {\n      // add filter to state if it has been checked\n      this.setState(prevState => {\n        return ({\n          [type]: [...prevState[type], value]\n        })\n      });\n    } else {\n      // remove filter from state if it has been unchecked\n      this.setState(prevState => {\n        return ({\n          [type]: prevState[type].filter(val => val !== value)\n        })\n      });\n    }\n  }\n\n  applyFilters = () => {\n    const { species, origin, gender, characterList } = this.state;\n    let pills = [].concat(species).concat(origin).concat(gender);\n\n    // filter data which contains any of applied filters\n    let filteredData = characterList\n      .filter((val) =>\n        species.includes(val.species) ||\n        gender.includes(val.gender) ||\n        origin.includes(val.origin)\n      );\n\n    this.setState({\n      filterPills: pills,\n      filteredData: pills.length ? filteredData : characterList,\n    });\n  }\n\n  removeFilter = (filterName, index) => {\n    this.setState(prevState => ({\n      filterPills: prevState.filterPills.filter((val, i) => i !== index)\n    }));\n  }\n\n  buildFilterSection = () => (\n    <div className=\"col-xs-12 col-sm-3 col-md-2\">\n      <SectionHeaderStyled>\n        {'Filters'}\n        <span\n          className=\"glyphicon glyphicon-plus add-filter-icon\"\n          onClick={this.applyFilters}\n          tabIndex=\"0\"></span>\n      </SectionHeaderStyled>\n      <FilterBox\n        handleChange={this.filterData}\n        filterName=\"species\"\n        filters={[\n          { isChecked: false, checkboxName: 'Human' },\n          { isChecked: false, checkboxName: 'Mythological' },\n          { isChecked: false, checkboxName: 'Alien' },\n        ]} />\n      <FilterBox\n        handleChange={this.filterData}\n        filterName=\"gender\"\n        filters={[\n          { isChecked: false, checkboxName: 'Male' },\n          { isChecked: false, checkboxName: 'Female' },\n        ]} />\n      <FilterBox\n        handleChange={this.filterData}\n        filterName=\"origin\"\n        filters={[\n          { isChecked: false, checkboxName: 'unknown' },\n          { isChecked: false, checkboxName: 'Earth (C-137)' },\n          { isChecked: false, checkboxName: 'Abadango' },\n          { isChecked: false, checkboxName: 'Venzenulon 7' },\n        ]} />\n    </div>\n  );\n\n  noDataFoundMessage = () => (\n    <div className=\"alert alert-info\" role=\"alert\">\n      <strong>No data found!</strong> Please refine your search.\n    </div>\n  );\n\n  buildErrorMessage = () => (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      <strong>Some error occurred.</strong> Please try again after some time.\n    </div>\n  );\n\n  buildLoadingSpinner = () => (\n    <div className=\"spinner-border text-secondary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n\n  render() {\n    const { filterPills, characterList, filteredData, isError, isDataLoading } = this.state;\n    let content;\n\n    if (isDataLoading) {\n      content = this.buildLoadingSpinner();\n    } else {\n      content = (\n        <RowStyled className=\"row\">\n          {this.buildFilterSection()}\n          <ColStyled className=\"col-xs-12 col-sm-9 col-md-10\">\n            <RowStyled className=\"row\">\n              <ColStyled className=\"col-xs-12 col-sm-9\">\n                <SectionHeaderStyled>Selected filters</SectionHeaderStyled>\n                <FilterPills\n                  pills={filterPills}\n                  removeFilter={this.removeFilter}\n                />\n              </ColStyled>\n              <div className=\"col-xs-12 col-sm-3\">\n                <SortDropdown\n                  options={[\n                    { value: 'Ascending', label: 'Ascending' },\n                    { value: 'Descending', label: 'Descending' }\n                  ]}\n                  onSortOptionChange={this.sortById}\n                />\n              </div>\n            </RowStyled>\n            <RowStyled className=\"row\">\n              <div className=\"col-xs-12\">\n                {isError && this.buildErrorMessage()}\n                {\n                  !isError && (filterPills.length ? (\n                    filteredData.length > 0 ? <CharacterList characterList={filteredData} />\n                      : this.noDataFoundMessage()) : (\n                      characterList.length > 0 ? <CharacterList characterList={characterList} />\n                        : this.noDataFoundMessage())\n                  )}\n              </div>\n            </RowStyled>\n          </ColStyled>\n        </RowStyled>\n      );\n    }\n    return content;\n  }\n}\n\nexport default HomePage;","import React from 'react';\nimport './App.css';\n\nimport HomePage from './pages/home-page/home-page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}